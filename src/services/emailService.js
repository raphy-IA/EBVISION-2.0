const nodemailer = require('nodemailer');

class EmailService {
    
    constructor() {
        this.transporter = null;
        this.isConfigured = false;
        this.initTransporter();
    }
    
    /**
     * Initialiser le transporteur email
     */
    initTransporter() {
        try {
            // V√©rifier si les param√®tres email sont configur√©s
            const emailUser = process.env.EMAIL_USER;
            const emailPassword = process.env.EMAIL_PASSWORD;
            
            if (!emailUser || !emailPassword) {
                console.warn('‚ö†Ô∏è Service email non configur√©: param√®tres manquants');
                this.isConfigured = false;
                return;
            }
            
            // Configuration pour le d√©veloppement (Gmail avec app password)
            this.transporter = nodemailer.createTransport({
                service: 'gmail',
                auth: {
                    user: emailUser,
                    pass: emailPassword
                }
            });
            
            this.isConfigured = true;
            console.log('‚úÖ Service email configur√©');
        } catch (error) {
            console.warn('‚ö†Ô∏è Service email non configur√©:', error.message);
            this.isConfigured = false;
        }
    }
    
    /**
     * Envoyer un email de notification
     */
    async sendNotificationEmail(to, subject, htmlContent, textContent = null) {
        if (!this.isConfigured) {
            console.warn('‚ö†Ô∏è Service email non configur√©, email non envoy√©');
            return false;
        }
        
        try {
            const mailOptions = {
                from: process.env.EMAIL_FROM || 'TRS Notifications <trs.notifications@gmail.com>',
                to: to,
                subject: subject,
                html: htmlContent,
                text: textContent || this.stripHtml(htmlContent)
            };
            
            const result = await this.transporter.sendMail(mailOptions);
            console.log(`üìß Email envoy√© √† ${to}: ${result.messageId}`);
            return true;
        } catch (error) {
            console.error('‚ùå Erreur lors de l\'envoi de l\'email:', error);
            return false;
        }
    }
    
    /**
     * Envoyer une notification d'√©tape en retard
     */
    async sendOverdueStageEmail(userEmail, userName, opportunityName, stageName, daysOverdue) {
        const subject = `‚ö†Ô∏è √âtape en retard - ${opportunityName}`;
        const htmlContent = `
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
                <div style="background-color: #ff6b6b; color: white; padding: 20px; text-align: center;">
                    <h1>‚ö†Ô∏è √âtape en retard</h1>
                </div>
                
                <div style="padding: 20px; background-color: #f8f9fa;">
                    <p>Bonjour ${userName},</p>
                    
                    <p>L'√©tape <strong>${stageName}</strong> de l'opportunit√© <strong>${opportunityName}</strong> 
                    est en retard de <strong>${daysOverdue} jour(s)</strong>.</p>
                    
                    <div style="background-color: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; margin: 20px 0; border-radius: 5px;">
                        <h3>Action requise :</h3>
                        <ul>
                            <li>V√©rifier l'√©tat de l'√©tape</li>
                            <li>Compl√©ter les actions manquantes</li>
                            <li>Mettre √† jour le planning si n√©cessaire</li>
                        </ul>
                    </div>
                    
                    <p>Veuillez vous connecter √† l'application pour traiter cette √©tape.</p>
                    
                    <div style="text-align: center; margin: 30px 0;">
                        <a href="${process.env.APP_URL || 'http://localhost:3000'}/opportunity-stages.html" 
                           style="background-color: #007bff; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px;">
                            Acc√©der √† l'opportunit√©
                        </a>
                    </div>
                    
                    <p>Cordialement,<br>L'√©quipe TRS</p>
                </div>
            </div>
        `;
        
        return await this.sendNotificationEmail(userEmail, subject, htmlContent);
    }
    
    /**
     * Envoyer une notification d'opportunit√© inactive
     */
    async sendInactiveOpportunityEmail(userEmail, userName, opportunityName, daysInactive) {
        const subject = `üìä Opportunit√© inactive - ${opportunityName}`;
        const htmlContent = `
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
                <div style="background-color: #ffa726; color: white; padding: 20px; text-align: center;">
                    <h1>üìä Opportunit√© inactive</h1>
                </div>
                
                <div style="padding: 20px; background-color: #f8f9fa;">
                    <p>Bonjour ${userName},</p>
                    
                    <p>L'opportunit√© <strong>${opportunityName}</strong> n'a pas eu d'activit√© 
                    depuis <strong>${daysInactive} jour(s)</strong>.</p>
                    
                    <div style="background-color: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; margin: 20px 0; border-radius: 5px;">
                        <h3>Actions recommand√©es :</h3>
                        <ul>
                            <li>Relancer le prospect/client</li>
                            <li>Mettre √† jour le statut de l'opportunit√©</li>
                            <li>Fermer l'opportunit√© si elle n'est plus d'actualit√©</li>
                        </ul>
                    </div>
                    
                    <div style="text-align: center; margin: 30px 0;">
                        <a href="${process.env.APP_URL || 'http://localhost:3000'}/opportunity-stages.html" 
                           style="background-color: #007bff; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px;">
                            G√©rer l'opportunit√©
                        </a>
                    </div>
                    
                    <p>Cordialement,<br>L'√©quipe TRS</p>
                </div>
            </div>
        `;
        
        return await this.sendNotificationEmail(userEmail, subject, htmlContent);
    }
    
    /**
     * Envoyer une notification de feuille de temps en retard
     */
    async sendTimeSheetOverdueEmail(userEmail, userName, week, year) {
        const subject = `üìã Feuille de temps en retard - Semaine ${week}/${year}`;
        const htmlContent = `
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
                <div style="background-color: #ef5350; color: white; padding: 20px; text-align: center;">
                    <h1>üìã Feuille de temps en retard</h1>
                </div>
                
                <div style="padding: 20px; background-color: #f8f9fa;">
                    <p>Bonjour ${userName},</p>
                    
                    <p>Votre feuille de temps pour la <strong>semaine ${week}/${year}</strong> 
                    est en retard et doit √™tre compl√©t√©e et soumise.</p>
                    
                    <div style="background-color: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; margin: 20px 0; border-radius: 5px;">
                        <h3>Action requise :</h3>
                        <ul>
                            <li>Compl√©ter les heures travaill√©es</li>
                            <li>Ajouter les activit√©s r√©alis√©es</li>
                            <li>Soumettre la feuille de temps</li>
                        </ul>
                    </div>
                    
                    <div style="text-align: center; margin: 30px 0;">
                        <a href="${process.env.APP_URL || 'http://localhost:3000'}/time-sheet-supervisors.html" 
                           style="background-color: #007bff; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px;">
                            Compl√©ter ma feuille de temps
                        </a>
                    </div>
                    
                    <p>Cordialement,<br>L'√©quipe TRS</p>
                </div>
            </div>
        `;
        
        return await this.sendNotificationEmail(userEmail, subject, htmlContent);
    }
    
    /**
     * Envoyer une notification d'opportunit√© gagn√©e
     */
    async sendOpportunityWonEmail(userEmail, userName, opportunityName, amount) {
        const subject = `üéâ Opportunit√© gagn√©e - ${opportunityName}`;
        const htmlContent = `
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
                <div style="background-color: #66bb6a; color: white; padding: 20px; text-align: center;">
                    <h1>üéâ F√©licitations !</h1>
                </div>
                
                <div style="padding: 20px; background-color: #f8f9fa;">
                    <p>Bonjour ${userName},</p>
                    
                    <p>F√©licitations ! L'opportunit√© <strong>${opportunityName}</strong> 
                    a √©t√© <strong>gagn√©e</strong> !</p>
                    
                    ${amount ? `<p>Montant : <strong>${amount} ‚Ç¨</strong></p>` : ''}
                    
                    <div style="background-color: #d4edda; border: 1px solid #c3e6cb; padding: 15px; margin: 20px 0; border-radius: 5px;">
                        <h3>Prochaines √©tapes :</h3>
                        <ul>
                            <li>Pr√©parer la contractualisation</li>
                            <li>Planifier le d√©marrage du projet</li>
                            <li>Mettre √† jour le CRM</li>
                        </ul>
                    </div>
                    
                    <div style="text-align: center; margin: 30px 0;">
                        <a href="${process.env.APP_URL || 'http://localhost:3000'}/opportunity-stages.html" 
                           style="background-color: #28a745; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px;">
                            Voir les d√©tails
                        </a>
                    </div>
                    
                    <p>Cordialement,<br>L'√©quipe TRS</p>
                </div>
            </div>
        `;
        
        return await this.sendNotificationEmail(userEmail, subject, htmlContent);
    }
    
    /**
     * Envoyer une notification d'opportunit√© perdue
     */
    async sendOpportunityLostEmail(userEmail, userName, opportunityName, reason) {
        const subject = `‚ùå Opportunit√© perdue - ${opportunityName}`;
        const htmlContent = `
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
                <div style="background-color: #ef5350; color: white; padding: 20px; text-align: center;">
                    <h1>‚ùå Opportunit√© perdue</h1>
                </div>
                
                <div style="padding: 20px; background-color: #f8f9fa;">
                    <p>Bonjour ${userName},</p>
                    
                    <p>L'opportunit√© <strong>${opportunityName}</strong> a √©t√© marqu√©e comme <strong>perdue</strong>.</p>
                    
                    ${reason ? `<p><strong>Raison :</strong> ${reason}</p>` : ''}
                    
                    <div style="background-color: #f8d7da; border: 1px solid #f5c6cb; padding: 15px; margin: 20px 0; border-radius: 5px;">
                        <h3>Actions recommand√©es :</h3>
                        <ul>
                            <li>Analyser les raisons de la perte</li>
                            <li>Mettre √† jour le CRM</li>
                            <li>Identifier les le√ßons apprises</li>
                        </ul>
                    </div>
                    
                    <div style="text-align: center; margin: 30px 0;">
                        <a href="${process.env.APP_URL || 'http://localhost:3000'}/opportunity-stages.html" 
                           style="background-color: #6c757d; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px;">
                            Voir les d√©tails
                        </a>
                    </div>
                    
                    <p>Cordialement,<br>L'√©quipe TRS</p>
                </div>
            </div>
        `;
        
        return await this.sendNotificationEmail(userEmail, subject, htmlContent);
    }
    
    /**
     * Convertir HTML en texte brut
     */
    stripHtml(html) {
        return html.replace(/<[^>]*>/g, '');
    }
    
    /**
     * Tester la configuration email
     */
    async testConnection() {
        if (!this.isConfigured) {
            return { success: false, error: 'Service email non configur√©' };
        }
        
        try {
            await this.transporter.verify();
            return { success: true, message: 'Connexion email r√©ussie' };
        } catch (error) {
            return { success: false, error: error.message };
        }
    }
}

module.exports = new EmailService();
