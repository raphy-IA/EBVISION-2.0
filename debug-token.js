// Script pour d√©boguer le token d'authentification
console.log('üîç D√©bogage du token d\'authentification...');

// V√©rifier tous les tokens possibles dans localStorage
const possibleTokenKeys = [
    'authToken',
    'token',
    'jwt',
    'access_token',
    'userToken',
    'auth_token'
];

console.log('üìã Tokens trouv√©s dans localStorage:');
possibleTokenKeys.forEach(key => {
    const value = localStorage.getItem(key);
    if (value) {
        console.log(`‚úÖ ${key}: ${value.substring(0, 20)}...`);
    } else {
        console.log(`‚ùå ${key}: non trouv√©`);
    }
});

// V√©rifier les autres donn√©es utilisateur
console.log('\nüë§ Donn√©es utilisateur dans localStorage:');
const userKeys = ['user', 'userInfo', 'currentUser'];
userKeys.forEach(key => {
    const value = localStorage.getItem(key);
    if (value) {
        try {
            const userData = JSON.parse(value);
            console.log(`‚úÖ ${key}:`, userData);
        } catch (e) {
            console.log(`‚úÖ ${key}: ${value.substring(0, 50)}...`);
        }
    } else {
        console.log(`‚ùå ${key}: non trouv√©`);
    }
});

// Test de l'API avec le token trouv√©
async function testWithRealToken() {
    const token = localStorage.getItem('authToken');
    if (!token) {
        console.log('‚ùå Aucun token authToken trouv√©');
        return;
    }
    
    console.log('\nüß™ Test de l\'API avec le token r√©el...');
    try {
        const response = await fetch('/api/time-sheet-supervisors/all-supervisors', {
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            }
        });
        
        console.log('Status:', response.status);
        if (response.ok) {
            const data = await response.json();
            console.log('‚úÖ API fonctionne avec le token r√©el');
            console.log('Data:', data);
        } else {
            console.log('‚ùå API ne fonctionne pas avec le token r√©el');
            const errorText = await response.text();
            console.log('Error:', errorText);
        }
    } catch (error) {
        console.error('‚ùå Erreur lors du test:', error);
    }
}

// Ex√©cuter le test
testWithRealToken(); 