const fs = require('fs');
const path = require('path');

// Script pour tester la correction de l'ID du modal RH
function testModalIdFix() {
  console.log('üîç Test de la correction de l\'ID du modal RH...\n');
  
  const collaborateursJsPath = path.join(__dirname, '../public/js/collaborateurs.js');
  
  try {
    const content = fs.readFileSync(collaborateursJsPath, 'utf8');
    
    console.log('üìã V√âRIFICATIONS DE L\'ID DU MODAL:');
    console.log('===================================');
    
    // 1. V√©rifier que l'ID correct est utilis√© (gestionRHModal)
    const correctModalId = content.includes('document.getElementById(\'gestionRHModal\')');
    console.log(`‚úÖ ID correct du modal (gestionRHModal): ${correctModalId ? 'PR√âSENT' : 'MANQUANT'}`);
    
    // 2. V√©rifier qu'il n'y a plus d'ancien ID incorrect (rhModal)
    const incorrectModalId = content.includes('document.getElementById(\'rhModal\')');
    console.log(`‚ùå Ancien ID incorrect (rhModal): ${incorrectModalId ? 'PR√âSENT (PROBL√àME)' : 'ABSENT (CORRECT)'}`);
    
    // 3. V√©rifier que la fermeture du modal est pr√©sente pour toutes les fonctions
    const modalCloseCount = (content.match(/bootstrap\.Modal\.getInstance\(document\.getElementById\('gestionRHModal'\)\)/g) || []).length;
    console.log(`‚úÖ Nombre de fermetures de modal: ${modalCloseCount}`);
    
    // 4. V√©rifier que toutes les fonctions RH ont la fermeture du modal
    const gradeClose = content.includes('bootstrap.Modal.getInstance(document.getElementById(\'gestionRHModal\'))') &&
                      content.includes('ajouterEvolutionGrade');
    console.log(`‚úÖ Fermeture modal apr√®s √©volution grade: ${gradeClose ? 'PR√âSENTE' : 'MANQUANTE'}`);
    
    const posteClose = content.includes('bootstrap.Modal.getInstance(document.getElementById(\'gestionRHModal\'))') &&
                      content.includes('ajouterEvolutionPoste');
    console.log(`‚úÖ Fermeture modal apr√®s √©volution poste: ${posteClose ? 'PR√âSENTE' : 'MANQUANTE'}`);
    
    const orgClose = content.includes('bootstrap.Modal.getInstance(document.getElementById(\'gestionRHModal\'))') &&
                    content.includes('ajouterEvolutionOrganisation');
    console.log(`‚úÖ Fermeture modal apr√®s √©volution organisation: ${orgClose ? 'PR√âSENTE' : 'MANQUANTE'}`);
    
    const typeClose = content.includes('bootstrap.Modal.getInstance(document.getElementById(\'gestionRHModal\'))') &&
                     content.includes('ajouterEvolutionTypeCollaborateur');
    console.log(`‚úÖ Fermeture modal apr√®s modification type collaborateur: ${typeClose ? 'PR√âSENTE' : 'MANQUANTE'}`);
    
    console.log('\nüìä R√âSUM√â DE LA CORRECTION:');
    console.log('============================');
    
    const totalChecks = 6;
    const passedChecks = [
      correctModalId,
      !incorrectModalId,
      modalCloseCount >= 4,
      gradeClose,
      posteClose,
      orgClose,
      typeClose
    ].filter(Boolean).length;
    
    console.log(`‚úÖ ${passedChecks}/${totalChecks} v√©rifications de l'ID du modal r√©ussies`);
    
    if (correctModalId && !incorrectModalId && modalCloseCount >= 4) {
      console.log('üéâ La correction de l\'ID du modal RH a √©t√© appliqu√©e avec succ√®s !');
      console.log('\nüöÄ COMPORTEMENT ATTENDU:');
      console.log('=========================');
      console.log('‚úÖ Le modal RH (ID: gestionRHModal) se fermera maintenant automatiquement');
      console.log('‚úÖ Apr√®s chaque action RH r√©ussie:');
      console.log('   ‚Ä¢ Message de succ√®s affich√©');
      console.log('   ‚Ä¢ Modal RH ferm√© automatiquement');
      console.log('   ‚Ä¢ Tableau principal rafra√Æchi');
      console.log('   ‚Ä¢ Formulaire r√©initialis√©');
      console.log('');
      console.log('üîß PROBL√àME R√âSOLU:');
      console.log('===================');
      console.log('‚Ä¢ Ancien probl√®me: ID incorrect "rhModal" au lieu de "gestionRHModal"');
      console.log('‚Ä¢ Solution: Correction de l\'ID dans toutes les fonctions de fermeture');
      console.log('‚Ä¢ R√©sultat: Le modal se ferme maintenant correctement');
    } else {
      console.log('‚ö†Ô∏è  La correction de l\'ID du modal RH n\'est pas compl√®te.');
      if (incorrectModalId) {
        console.log('‚ùå PROBL√àME: L\'ancien ID incorrect "rhModal" est encore pr√©sent');
      }
      if (!correctModalId) {
        console.log('‚ùå PROBL√àME: L\'ID correct "gestionRHModal" n\'est pas trouv√©');
      }
    }
    
    console.log('\nüîç D√âTAILS TECHNIQUES:');
    console.log('======================');
    console.log('‚Ä¢ ID correct du modal RH: gestionRHModal');
    console.log('‚Ä¢ Fonction de fermeture: bootstrap.Modal.getInstance()');
    console.log('‚Ä¢ V√©rification: if (rhModal) { rhModal.hide(); }');
    console.log('‚Ä¢ Application: Dans toutes les fonctions RH apr√®s succ√®s');
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la lecture du fichier:', error.message);
  }
}

// Ex√©cuter le script
if (require.main === module) {
  testModalIdFix();
}

module.exports = { testModalIdFix };


