const fs = require('fs');
const path = require('path');

// Script pour tester que toutes les fonctions du modal RH ferment automatiquement le modal apr√®s succ√®s
function testAllModalCloseFunctions() {
  console.log('üîç Test de la fermeture automatique du modal pour toutes les fonctions RH...\n');
  
  const collaborateursJsPath = path.join(__dirname, '../public/js/collaborateurs.js');
  
  try {
    const content = fs.readFileSync(collaborateursJsPath, 'utf8');
    
    console.log('üìã V√âRIFICATIONS DE LA FERMETURE AUTOMATIQUE:');
    console.log('=============================================');
    
    // 1. V√©rifier la fermeture du modal apr√®s √©volution de grade
    const gradeModalClose = content.includes('bootstrap.Modal.getInstance(document.getElementById(\'rhModal\'))') &&
                           content.includes('rhModal.hide()') &&
                           content.includes('ajouterEvolutionGrade');
    console.log(`‚úÖ Fermeture modal apr√®s √©volution grade: ${gradeModalClose ? 'PR√âSENTE' : 'MANQUANTE'}`);
    
    // 2. V√©rifier la fermeture du modal apr√®s √©volution de poste
    const posteModalClose = content.includes('bootstrap.Modal.getInstance(document.getElementById(\'rhModal\'))') &&
                           content.includes('rhModal.hide()') &&
                           content.includes('ajouterEvolutionPoste');
    console.log(`‚úÖ Fermeture modal apr√®s √©volution poste: ${posteModalClose ? 'PR√âSENTE' : 'MANQUANTE'}`);
    
    // 3. V√©rifier la fermeture du modal apr√®s √©volution organisationnelle
    const orgModalClose = content.includes('bootstrap.Modal.getInstance(document.getElementById(\'rhModal\'))') &&
                         content.includes('rhModal.hide()') &&
                         content.includes('ajouterEvolutionOrganisation');
    console.log(`‚úÖ Fermeture modal apr√®s √©volution organisation: ${orgModalClose ? 'PR√âSENTE' : 'MANQUANTE'}`);
    
    // 4. V√©rifier la fermeture du modal apr√®s modification type collaborateur
    const typeModalClose = content.includes('bootstrap.Modal.getInstance(document.getElementById(\'rhModal\'))') &&
                          content.includes('rhModal.hide()') &&
                          content.includes('ajouterEvolutionTypeCollaborateur');
    console.log(`‚úÖ Fermeture modal apr√®s modification type collaborateur: ${typeModalClose ? 'PR√âSENTE' : 'MANQUANTE'}`);
    
    // 5. V√©rifier que le rafra√Æchissement du tableau est conserv√© pour toutes les fonctions
    const tableRefresh = content.includes('await loadCollaborateurs(currentPage)');
    console.log(`‚úÖ Rafra√Æchissement du tableau conserv√©: ${tableRefresh ? 'PR√âSENT' : 'MANQUANT'}`);
    
    // 6. V√©rifier que les messages de succ√®s sont coh√©rents
    const successMessages = content.includes('‚úÖ √âvolution de grade ajout√©e avec succ√®s') &&
                           content.includes('‚úÖ √âvolution de poste ajout√©e avec succ√®s') &&
                           content.includes('‚úÖ √âvolution organisationnelle ajout√©e avec succ√®s') &&
                           content.includes('‚úÖ Type de collaborateur mis √† jour avec succ√®s');
    console.log(`‚úÖ Messages de succ√®s coh√©rents: ${successMessages ? 'PR√âSENTS' : 'MANQUANTS'}`);
    
    // 7. V√©rifier que la r√©initialisation des formulaires est conserv√©e
    const formReset = content.includes('document.getElementById(\'rh-grade-select\').value = \'\'') &&
                     content.includes('document.getElementById(\'rh-poste-select\').value = \'\'') &&
                     content.includes('document.getElementById(\'rh-type-collaborateur-select\').value = \'\'') &&
                     content.includes('document.getElementById(\'rh-business-unit-select\').value = \'\'');
    console.log(`‚úÖ R√©initialisation des formulaires conserv√©e: ${formReset ? 'PR√âSENTE' : 'MANQUANTE'}`);
    
    console.log('\nüìä R√âSUM√â DE LA FERMETURE AUTOMATIQUE:');
    console.log('=======================================');
    
    const totalChecks = 7;
    const passedChecks = [
      gradeModalClose,
      posteModalClose,
      orgModalClose,
      typeModalClose,
      tableRefresh,
      successMessages,
      formReset
    ].filter(Boolean).length;
    
    console.log(`‚úÖ ${passedChecks}/${totalChecks} fonctionnalit√©s de fermeture automatique appliqu√©es`);
    
    if (passedChecks === totalChecks) {
      console.log('üéâ Toutes les fonctions du modal RH ferment automatiquement le modal apr√®s succ√®s !');
      console.log('\nüöÄ COMPORTEMENT ATTENDU:');
      console.log('=========================');
      console.log('‚úÖ Apr√®s ajout d\'√©volution de grade:');
      console.log('   ‚Ä¢ Message de succ√®s affich√©');
      console.log('   ‚Ä¢ Modal RH ferm√© automatiquement');
      console.log('   ‚Ä¢ Tableau principal rafra√Æchi');
      console.log('   ‚Ä¢ Formulaire r√©initialis√©');
      console.log('');
      console.log('‚úÖ Apr√®s ajout d\'√©volution de poste:');
      console.log('   ‚Ä¢ Message de succ√®s affich√©');
      console.log('   ‚Ä¢ Modal RH ferm√© automatiquement');
      console.log('   ‚Ä¢ Tableau principal rafra√Æchi');
      console.log('   ‚Ä¢ Formulaire r√©initialis√©');
      console.log('');
      console.log('‚úÖ Apr√®s ajout d\'√©volution organisationnelle:');
      console.log('   ‚Ä¢ Message de succ√®s affich√©');
      console.log('   ‚Ä¢ Modal RH ferm√© automatiquement');
      console.log('   ‚Ä¢ Tableau principal rafra√Æchi');
      console.log('   ‚Ä¢ Formulaire r√©initialis√©');
      console.log('');
      console.log('‚úÖ Apr√®s modification type de collaborateur:');
      console.log('   ‚Ä¢ Message de succ√®s affich√©');
      console.log('   ‚Ä¢ Modal RH ferm√© automatiquement');
      console.log('   ‚Ä¢ Tableau principal rafra√Æchi');
      console.log('   ‚Ä¢ Formulaire r√©initialis√©');
      console.log('');
      console.log('üéØ AVANTAGES DE CETTE APPROCHE:');
      console.log('===============================');
      console.log('‚Ä¢ Comportement uniforme pour toutes les actions RH');
      console.log('‚Ä¢ Plus simple et plus fiable que le rafra√Æchissement du modal');
      console.log('‚Ä¢ Meilleure exp√©rience utilisateur (feedback clair)');
      console.log('‚Ä¢ √âvite les probl√®mes de synchronisation des donn√©es');
      console.log('‚Ä¢ L\'utilisateur voit imm√©diatement le r√©sultat dans le tableau');
      console.log('‚Ä¢ Pas de risque de donn√©es obsol√®tes dans le modal');
    } else {
      console.log('‚ö†Ô∏è  Certaines fonctions du modal RH ne ferment pas automatiquement le modal.');
      
      if (!typeModalClose) {
        console.log('‚ùå PROBL√àME D√âTECT√â: La fonction ajouterEvolutionTypeCollaborateur ne ferme pas le modal');
        console.log('üîß SOLUTION: Ajouter la fermeture automatique du modal apr√®s succ√®s');
      }
    }
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la lecture du fichier:', error.message);
  }
}

// Ex√©cuter le script
if (require.main === module) {
  testAllModalCloseFunctions();
}

module.exports = { testAllModalCloseFunctions };




