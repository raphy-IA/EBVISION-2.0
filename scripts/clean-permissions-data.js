const { pool } = require('../src/utils/database');

async function cleanPermissionsData() {
    try {
        const client = await pool.connect();
        console.log('üßπ Nettoyage des donn√©es existantes...');
        
        // V√©rifier les donn√©es existantes
        const permissionsCount = await client.query('SELECT COUNT(*) FROM permissions');
        const rolesCount = await client.query('SELECT COUNT(*) FROM roles');
        const rolePermissionsCount = await client.query('SELECT COUNT(*) FROM role_permissions');
        
        console.log(`üìä Donn√©es existantes:`);
        console.log(`   - Permissions: ${permissionsCount.rows[0].count}`);
        console.log(`   - R√¥les: ${rolesCount.rows[0].count}`);
        console.log(`   - Liaisons r√¥les-permissions: ${rolePermissionsCount.rows[0].count}`);
        
        // Nettoyer les donn√©es dans l'ordre inverse des d√©pendances
        console.log('\nüóëÔ∏è Suppression des donn√©es existantes...');
        
        await client.query('DELETE FROM role_permissions');
        console.log('   ‚úÖ role_permissions nettoy√©');
        
        await client.query('DELETE FROM user_permissions');
        console.log('   ‚úÖ user_permissions nettoy√©');
        
        await client.query('DELETE FROM permissions');
        console.log('   ‚úÖ permissions nettoy√©');
        
        await client.query('DELETE FROM roles');
        console.log('   ‚úÖ roles nettoy√©');
        
        // V√©rifier le nettoyage
        const permissionsCountAfter = await client.query('SELECT COUNT(*) FROM permissions');
        const rolesCountAfter = await client.query('SELECT COUNT(*) FROM roles');
        
        console.log(`\nüìä Donn√©es apr√®s nettoyage:`);
        console.log(`   - Permissions: ${permissionsCountAfter.rows[0].count}`);
        console.log(`   - R√¥les: ${rolesCountAfter.rows[0].count}`);
        
        client.release();
        console.log('\n‚úÖ Nettoyage termin√© avec succ√®s !');
        
    } catch (error) {
        console.error('‚ùå Erreur lors du nettoyage:', error);
        throw error;
    }
}

cleanPermissionsData()
    .then(() => {
        console.log('‚úÖ Nettoyage compl√©t√©');
        process.exit(0);
    })
    .catch((error) => {
        console.error('‚ùå √âchec du nettoyage:', error);
        process.exit(1);
    });
