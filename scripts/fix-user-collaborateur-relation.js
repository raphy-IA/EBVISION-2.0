const { query } = require('../src/utils/database');

async function fixUserCollaborateurRelation() {
    console.log('üîß CORRECTION DE LA RELATION UTILISATEUR-COLLABORATEUR');
    console.log('=====================================================');

    try {
        // 1. V√©rifier l'utilisateur probl√©matique
        console.log('\nüìã 1. V√âRIFICATION DE L\'UTILISATEUR PROBL√âMATIQUE');

        const problematicUser = await query(`
            SELECT id, email, nom, prenom, collaborateur_id
            FROM users
            WHERE email = 'cdjiki@eb-partnersgroup.cm'
        `);

        if (problematicUser.rows.length > 0) {
            const user = problematicUser.rows[0];
            console.log('Utilisateur trouv√©:');
            console.log(`  - ID: ${user.id}`);
            console.log(`  - Email: ${user.email}`);
            console.log(`  - Nom: ${user.nom}`);
            console.log(`  - Pr√©nom: ${user.prenom}`);
            console.log(`  - Collaborateur ID: ${user.collaborateur_id || 'NULL'}`);
        } else {
            console.log('‚ùå Utilisateur cdjiki@eb-partnersgroup.cm non trouv√©');
            return;
        }

        // 2. V√©rifier les collaborateurs existants
        console.log('\nüìã 2. COLLABORATEURS EXISTANTS');

        const collaborateurs = await query(`
            SELECT id, nom, prenom, email
            FROM collaborateurs
            ORDER BY nom, prenom
        `);

        console.log('Collaborateurs disponibles:');
        collaborateurs.rows.forEach((collab, index) => {
            console.log(`  ${index + 1}. ${collab.prenom} ${collab.nom} (${collab.email}) - ID: ${collab.id}`);
        });

        // 3. Chercher un collaborateur correspondant
        console.log('\nüìã 3. RECHERCHE D\'UN COLLABORATEUR CORRESPONDANT');

        const matchingCollaborateur = await query(`
            SELECT id, nom, prenom, email
            FROM collaborateurs
            WHERE LOWER(nom) LIKE LOWER($1) OR LOWER(prenom) LIKE LOWER($2)
        `, ['%djiki%', '%cyrille%']);

        if (matchingCollaborateur.rows.length > 0) {
            console.log('Collaborateur correspondant trouv√©:');
            matchingCollaborateur.rows.forEach(collab => {
                console.log(`  - ${collab.prenom} ${collab.nom} (${collab.email}) - ID: ${collab.id}`);
            });
        } else {
            console.log('‚ö†Ô∏è Aucun collaborateur correspondant trouv√©');
        }

        // 4. Cr√©er un collaborateur pour cet utilisateur si n√©cessaire
        console.log('\nüìã 4. CR√âATION DU COLLABORATEUR SI N√âCESSAIRE');

        let collaborateurId = null;

        if (matchingCollaborateur.rows.length > 0) {
            // Utiliser le premier collaborateur correspondant
            collaborateurId = matchingCollaborateur.rows[0].id;
            console.log(`‚úÖ Utilisation du collaborateur existant: ${collaborateurId}`);
        } else {
            // Cr√©er un nouveau collaborateur
            const newCollaborateur = await query(`
                INSERT INTO collaborateurs (nom, prenom, email)
                VALUES ($1, $2, $3)
                RETURNING id
            `, ['Djiki', 'Cyrille', 'cdjiki@eb-partnersgroup.cm']);

            collaborateurId = newCollaborateur.rows[0].id;
            console.log(`‚úÖ Nouveau collaborateur cr√©√©: ${collaborateurId}`);
        }

        // 5. Mettre √† jour l'utilisateur avec le collaborateur_id
        console.log('\nüìã 5. MISE √Ä JOUR DE L\'UTILISATEUR');

        await query(`
            UPDATE users
            SET collaborateur_id = $1
            WHERE id = $2
        `, [collaborateurId, problematicUser.rows[0].id]);

        console.log('‚úÖ Utilisateur mis √† jour avec le collaborateur_id');

        // 6. V√©rifier la mise √† jour
        console.log('\nüìã 6. V√âRIFICATION DE LA MISE √Ä JOUR');

        const updatedUser = await query(`
            SELECT id, email, nom, prenom, collaborateur_id
            FROM users
            WHERE email = 'cdjiki@eb-partnersgroup.cm'
        `);

        if (updatedUser.rows.length > 0) {
            const user = updatedUser.rows[0];
            console.log('Utilisateur mis √† jour:');
            console.log(`  - ID: ${user.id}`);
            console.log(`  - Email: ${user.email}`);
            console.log(`  - Collaborateur ID: ${user.collaborateur_id}`);
        }

        // 7. Tester la relation
        console.log('\nüß™ 7. TEST DE LA RELATION');

        const testCollaborateur = await query(`
            SELECT id, nom, prenom
            FROM collaborateurs
            WHERE id = $1
        `, [collaborateurId]);

        if (testCollaborateur.rows.length > 0) {
            console.log('‚úÖ Collaborateur trouv√©:', testCollaborateur.rows[0]);
        } else {
            console.log('‚ùå Collaborateur non trouv√©');
        }

        console.log('\n‚úÖ Correction termin√©e avec succ√®s');

    } catch (error) {
        console.error('‚ùå Erreur lors de la correction:', error.message);
    }
}

fixUserCollaborateurRelation(); 