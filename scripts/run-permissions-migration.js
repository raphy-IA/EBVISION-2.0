const fs = require('fs');
const path = require('path');
const { pool } = require('../src/utils/database');

async function runMigration() {
    console.log('üöÄ D√©but de la migration du syst√®me de permissions...');
    
    try {
        // Test de connexion
        const client = await pool.connect();
        console.log('‚úÖ Connexion √† la base de donn√©es √©tablie');
        
        // Lecture et ex√©cution de la premi√®re migration (structure)
        console.log('üìã Ex√©cution de la migration de structure...');
        const structureSQL = fs.readFileSync(
            path.join(__dirname, '../database/migrations/042_create_permissions_system.sql'), 
            'utf8'
        );
        
        await client.query(structureSQL);
        console.log('‚úÖ Structure des tables cr√©√©e avec succ√®s');
        
        // Lecture et ex√©cution de la deuxi√®me migration (donn√©es)
        console.log('üìã Ex√©cution de la migration des donn√©es...');
        const dataSQL = fs.readFileSync(
            path.join(__dirname, '../database/migrations/043_migrate_permissions_data.sql'), 
            'utf8'
        );
        
        await client.query(dataSQL);
        console.log('‚úÖ Donn√©es migr√©es avec succ√®s');
        
        // V√©rification de la migration
        console.log('üîç V√©rification de la migration...');
        
        const rolesCount = await client.query('SELECT COUNT(*) FROM user_roles');
        const permissionsCount = await client.query('SELECT COUNT(*) FROM permissions');
        const rolePermissionsCount = await client.query('SELECT COUNT(*) FROM role_permissions');
        const usersWithRoles = await client.query('SELECT COUNT(*) FROM users WHERE role_id IS NOT NULL');
        
        console.log(`üìä R√©sultats de la migration:`);
        console.log(`   - R√¥les cr√©√©s: ${rolesCount.rows[0].count}`);
        console.log(`   - Permissions cr√©√©es: ${permissionsCount.rows[0].count}`);
        console.log(`   - Liaisons r√¥les-permissions: ${rolePermissionsCount.rows[0].count}`);
        console.log(`   - Utilisateurs avec r√¥les: ${usersWithRoles.rows[0].count}`);
        
        // Affichage des r√¥les cr√©√©s
        const roles = await client.query('SELECT name, description FROM user_roles ORDER BY name');
        console.log('\nüìã R√¥les disponibles:');
        roles.rows.forEach(role => {
            console.log(`   - ${role.name}: ${role.description}`);
        });
        
        // Affichage des cat√©gories de permissions
        const categories = await client.query('SELECT DISTINCT category FROM permissions ORDER BY category');
        console.log('\nüìã Cat√©gories de permissions:');
        categories.rows.forEach(cat => {
            console.log(`   - ${cat.category}`);
        });
        
        client.release();
        console.log('\nüéâ Migration termin√©e avec succ√®s !');
        
    } catch (error) {
        console.error('‚ùå Erreur lors de la migration:', error);
        throw error;
    }
}

// Ex√©cution de la migration
runMigration()
    .then(() => {
        console.log('‚úÖ Migration compl√©t√©e');
        process.exit(0);
    })
    .catch((error) => {
        console.error('‚ùå √âchec de la migration:', error);
        process.exit(1);
    });
