const { pool } = require('../src/utils/database');

async function checkDatabaseStatus() {
    try {
        console.log('üîç V√©rification de l\'√©tat de la base de donn√©es...\n');

        // V√©rifier les tables existantes
        const tables = await pool.query(`
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_schema = 'public' 
            ORDER BY table_name
        `);

        console.log('üìã Tables existantes:');
        tables.rows.forEach(row => {
            console.log(`  - ${row.table_name}`);
        });

        // V√©rifier si la table divisions existe et sa structure
        const divisionsExists = tables.rows.some(row => row.table_name === 'divisions');
        const businessUnitsExists = tables.rows.some(row => row.table_name === 'business_units');

        console.log('\nüìä √âtat des tables cl√©s:');
        console.log(`  - divisions: ${divisionsExists ? '‚úÖ Existe' : '‚ùå N\'existe pas'}`);
        console.log(`  - business_units: ${businessUnitsExists ? '‚úÖ Existe' : '‚ùå N\'existe pas'}`);

        if (divisionsExists) {
            const divisionsStructure = await pool.query(`
                SELECT column_name, data_type, is_nullable, column_default
                FROM information_schema.columns 
                WHERE table_name = 'divisions' 
                ORDER BY ordinal_position
            `);

            console.log('\nüìã Structure de la table divisions:');
            divisionsStructure.rows.forEach(row => {
                console.log(`  - ${row.column_name}: ${row.data_type} (nullable: ${row.is_nullable})`);
            });

            // V√©rifier les donn√©es
            const divisionsCount = await pool.query('SELECT COUNT(*) as count FROM divisions');
            console.log(`\nüìä Nombre de divisions: ${divisionsCount.rows[0].count}`);
        }

        if (businessUnitsExists) {
            const businessUnitsStructure = await pool.query(`
                SELECT column_name, data_type, is_nullable, column_default
                FROM information_schema.columns 
                WHERE table_name = 'business_units' 
                ORDER BY ordinal_position
            `);

            console.log('\nüìã Structure de la table business_units:');
            businessUnitsStructure.rows.forEach(row => {
                console.log(`  - ${row.column_name}: ${row.data_type} (nullable: ${row.is_nullable})`);
            });

            // V√©rifier les donn√©es
            const businessUnitsCount = await pool.query('SELECT COUNT(*) as count FROM business_units');
            console.log(`\nüìä Nombre de business units: ${businessUnitsCount.rows[0].count}`);
        }

    } catch (error) {
        console.error('‚ùå Erreur lors de la v√©rification:', error);
    } finally {
        await pool.end();
    }
}

checkDatabaseStatus(); 