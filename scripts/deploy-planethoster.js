const fs = require('fs');
const path = require('path');

console.log('üöÄ Pr√©paration du d√©ploiement pour PlanetHoster N0C...\n');

// 1. Cr√©er le fichier .htaccess pour la redirection
const htaccessContent = `
RewriteEngine On

# Redirection de HTTP vers HTTPS
RewriteCond %{HTTPS} off
RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

# Redirection des requ√™tes API vers Node.js
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^api/(.*)$ http://localhost:3000/api/$1 [P,L]

# Redirection des fichiers statiques
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ /public/$1 [L]

# Headers de s√©curit√©
Header always set X-Content-Type-Options nosniff
Header always set X-Frame-Options DENY
Header always set X-XSS-Protection "1; mode=block"
Header always set Referrer-Policy "strict-origin-when-cross-origin"

# Cache pour les fichiers statiques
<FilesMatch "\.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$">
    ExpiresActive On
    ExpiresDefault "access plus 1 year"
    Header set Cache-Control "public, immutable"
</FilesMatch>
`;

fs.writeFileSync('.htaccess', htaccessContent);
console.log('‚úÖ Fichier .htaccess cr√©√©');

// 2. Cr√©er le fichier package.json optimis√© pour la production
const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));

// Ajouter les scripts de production
packageJson.scripts = {
  ...packageJson.scripts,
  "start:prod": "NODE_ENV=production node server.js",
  "pm2:start": "pm2 start ecosystem.config.js --env production",
  "pm2:stop": "pm2 stop eb-vision-2.0",
  "pm2:restart": "pm2 restart eb-vision-2.0",
  "pm2:logs": "pm2 logs eb-vision-2.0",
  "pm2:monit": "pm2 monit"
};

// Ajouter PM2 comme d√©pendance de production
if (!packageJson.dependencies) packageJson.dependencies = {};
packageJson.dependencies.pm2 = "^5.3.0";

fs.writeFileSync('package.json', JSON.stringify(packageJson, null, 2));
console.log('‚úÖ package.json mis √† jour avec les scripts de production');

// 3. Cr√©er un fichier de configuration PM2 sp√©cifique
const pm2Config = `
module.exports = {
  apps: [{
    name: 'eb-vision-2.0',
    script: 'server.js',
    instances: 1,
    autorestart: true,
    watch: false,
    max_memory_restart: '1G',
    env: {
      NODE_ENV: 'production',
      PORT: 3000
    },
    error_file: './logs/err.log',
    out_file: './logs/out.log',
    log_file: './logs/combined.log',
    time: true
  }]
};
`;

// Cr√©er le dossier logs s'il n'existe pas
if (!fs.existsSync('logs')) {
  fs.mkdirSync('logs');
}

fs.writeFileSync('ecosystem.config.js', pm2Config);
console.log('‚úÖ Configuration PM2 cr√©√©e');

// 4. Cr√©er un script d'installation
const installScript = `#!/bin/bash
echo "üîß Installation des d√©pendances..."
npm install --production

echo "üì¶ Installation de PM2..."
npm install -g pm2

echo "üóÑÔ∏è Cr√©ation des dossiers n√©cessaires..."
mkdir -p logs
mkdir -p uploads

echo "üîê Configuration des permissions..."
chmod 755 public/
chmod 644 .htaccess

echo "üöÄ D√©marrage de l'application..."
pm2 start ecosystem.config.js --env production

echo "‚úÖ Installation termin√©e !"
echo "üìä Pour surveiller l'application: pm2 monit"
echo "üìù Pour voir les logs: pm2 logs eb-vision-2.0"
`;

fs.writeFileSync('install.sh', installScript);
console.log('‚úÖ Script d\'installation cr√©√©');

// 5. Cr√©er un fichier README pour le d√©ploiement
const readmeContent = `# D√©ploiement EB-Vision 2.0 sur PlanetHoster N0C

## üìã Pr√©requis

1. **Compte PlanetHoster N0C** avec Node.js activ√©
2. **Base de donn√©es PostgreSQL** configur√©e
3. **Domaine** pointant vers votre h√©bergement

## üöÄ Installation

### 1. Upload des fichiers
- Uploadez tous les fichiers du projet dans le dossier racine de votre h√©bergement
- Assurez-vous que le fichier \`.htaccess\` est bien pr√©sent

### 2. Configuration de la base de donn√©es
Modifiez le fichier \`config.production.js\` avec vos informations de base de donn√©es :

\`\`\`javascript
database: {
  host: 'votre_host_postgresql',
  port: 5432,
  database: 'votre_nom_base',
  user: 'votre_utilisateur',
  password: 'votre_mot_de_passe'
}
\`\`\`

### 3. Variables d'environnement
Cr√©ez un fichier \`.env\` √† la racine avec :

\`\`\`
NODE_ENV=production
PORT=3000
DB_HOST=votre_host_postgresql
DB_PORT=5432
DB_NAME=votre_nom_base
DB_USER=votre_utilisateur
DB_PASSWORD=votre_mot_de_passe
JWT_SECRET=votre_secret_jwt_super_securise
APP_URL=https://votre-domaine.com
\`\`\`

### 4. Installation et d√©marrage
\`\`\`bash
# Rendre le script ex√©cutable
chmod +x install.sh

# Ex√©cuter l'installation
./install.sh
\`\`\`

## üîß Commandes utiles

\`\`\`bash
# D√©marrer l'application
npm run pm2:start

# Arr√™ter l'application
npm run pm2:stop

# Red√©marrer l'application
npm run pm2:restart

# Voir les logs
npm run pm2:logs

# Surveiller l'application
npm run pm2:monit
\`\`\`

## üìä Monitoring

- **PM2 Dashboard** : \`pm2 monit\`
- **Logs en temps r√©el** : \`pm2 logs eb-vision-2.0\`
- **Statut de l'application** : \`pm2 status\`

## üîí S√©curit√©

1. **Changez le JWT_SECRET** en production
2. **Utilisez HTTPS** (configur√© dans .htaccess)
3. **Limitez les acc√®s** √† la base de donn√©es
4. **Surveillez les logs** r√©guli√®rement

## üÜò D√©pannage

### L'application ne d√©marre pas
\`\`\`bash
# V√©rifier les logs
pm2 logs eb-vision-2.0

# V√©rifier la configuration
pm2 show eb-vision-2.0
\`\`\`

### Probl√®me de base de donn√©es
- V√©rifiez les informations de connexion dans \`config.production.js\`
- Testez la connexion : \`node -e "require('./src/utils/database')"\`

### Probl√®me de permissions
\`\`\`bash
chmod 755 public/
chmod 644 .htaccess
chmod +x install.sh
\`\`\`
`;

fs.writeFileSync('DEPLOYMENT.md', readmeContent);
console.log('‚úÖ Documentation de d√©ploiement cr√©√©e');

console.log('\nüéâ Pr√©paration termin√©e !');
console.log('\nüìã Fichiers cr√©√©s :');
console.log('   - .htaccess (redirection et s√©curit√©)');
console.log('   - ecosystem.config.js (configuration PM2)');
console.log('   - install.sh (script d\'installation)');
console.log('   - DEPLOYMENT.md (documentation compl√®te)');
console.log('\nüöÄ Prochaines √©tapes :');
console.log('   1. Uploadez tous les fichiers sur PlanetHoster');
console.log('   2. Configurez votre base de donn√©es PostgreSQL');
console.log('   3. Modifiez config.production.js avec vos informations');
console.log('   4. Ex√©cutez ./install.sh');










