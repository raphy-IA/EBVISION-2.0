const fs = require('fs');

// Script de configuration pour la synchronisation en production
function configureProductionSync() {
  console.log('üîß Configuration de la synchronisation vers la production\n');
  
  console.log('üìã INSTRUCTIONS POUR LA SYNCHRONISATION:');
  console.log('========================================\n');
  
  console.log('1Ô∏è‚É£  CONFIGURATION:');
  console.log('   ‚úÖ La configuration de production est d√©j√† en place');
  console.log('   ‚úÖ Le script utilise config.production.js existant');
  console.log('');
  
  console.log('2Ô∏è‚É£  COPIE DES FICHIERS:');
  console.log('   Copiez ces fichiers vers la production:');
  console.log('');
  console.log('   scp scripts/opportunity-types-config-local.json user@production:/path/to/app/scripts/');
  console.log('   scp scripts/sync-opportunity-types-to-production.js user@production:/path/to/app/scripts/');
  console.log('');
  
  console.log('3Ô∏è‚É£  EX√âCUTION:');
  console.log('   Sur le serveur de production, ex√©cutez:');
  console.log('');
  console.log('   cd /path/to/your/app');
  console.log('   node scripts/sync-opportunity-types-to-production.js');
  console.log('');
  
  console.log('4Ô∏è‚É£  V√âRIFICATION:');
  console.log('   Apr√®s synchronisation, v√©rifiez que les types d\'opportunit√© ont leurs √©tapes:');
  console.log('');
  console.log('   - Connectez-vous √† l\'application');
  console.log('   - Allez dans Configuration Types d\'Opportunit√©');
  console.log('   - V√©rifiez que chaque type a ses √©tapes, actions et documents');
  console.log('');
  
  console.log('üìä DONN√âES √Ä SYNCHRONISER:');
  console.log('==========================');
  console.log('   - 9 types d\'opportunit√©');
  console.log('   - 25 √©tapes au total');
  console.log('   - 13 actions requises');
  console.log('   - 11 documents requis');
  console.log('');
  
  console.log('‚ö†Ô∏è  IMPORTANT:');
  console.log('   - Le script v√©rifie l\'existence avant de cr√©er');
  console.log('   - Les donn√©es existantes ne seront pas √©cras√©es');
  console.log('   - Seules les nouvelles donn√©es seront ajout√©es');
  console.log('');
  
  console.log('üöÄ PR√äT POUR LA SYNCHRONISATION !');
}

// Cr√©er aussi un script bash pour faciliter l'ex√©cution
const bashScript = `#!/bin/bash

# Script de synchronisation des types d'opportunit√© vers la production
echo "üöÄ Synchronisation des types d'opportunit√© vers la production..."

# V√©rifier que le fichier de configuration existe
if [ ! -f "scripts/opportunity-types-config-local.json" ]; then
    echo "‚ùå Fichier de configuration non trouv√©!"
    echo "   Ex√©cutez d'abord: node scripts/analyze-opportunity-types-config.js"
    exit 1
fi

# La configuration de production est d√©j√† en place
echo "‚úÖ Configuration de production d√©tect√©e"

# Ex√©cuter la synchronisation
echo "üìä D√©marrage de la synchronisation..."
node scripts/sync-opportunity-types-to-production.js

if [ $? -eq 0 ]; then
    echo "‚úÖ Synchronisation termin√©e avec succ√®s!"
else
    echo "‚ùå Erreur lors de la synchronisation"
    exit 1
fi
`;

// Sauvegarder le script bash
fs.writeFileSync('scripts/sync-to-production.sh', bashScript);
fs.chmodSync('scripts/sync-to-production.sh', '755');

console.log('üìù Script bash cr√©√©: scripts/sync-to-production.sh');
console.log('   Utilisation: ./scripts/sync-to-production.sh');

if (require.main === module) {
  configureProductionSync();
}

module.exports = { configureProductionSync };
