const axios = require('axios');

async function debugUsersAPI() {
    try {
        console.log('üîç D√©bogage de l\'API users...');
        
        // 1. V√©rifier si le serveur r√©pond
        console.log('\n1. Test de connexion au serveur:');
        try {
            const response = await axios.get('http://localhost:3000/');
            console.log('‚úÖ Serveur accessible:', response.status);
        } catch (error) {
            console.log('‚ùå Serveur inaccessible:', error.message);
            return;
        }

        // 2. Test de l'API users sans authentification
        console.log('\n2. Test de l\'API users sans authentification:');
        try {
            const response = await axios.get('http://localhost:3000/api/users');
            console.log('‚úÖ R√©ponse:', response.status);
            console.log('üìä Donn√©es:', JSON.stringify(response.data, null, 2));
        } catch (error) {
            console.log('‚ùå Erreur:', error.response?.status, error.response?.data?.message || error.message);
        }

        // 3. Test avec un token simple
        console.log('\n3. Test avec token simple:');
        try {
            const response = await axios.get('http://localhost:3000/api/users', {
                headers: {
                    'Authorization': 'Bearer simple-token',
                    'Content-Type': 'application/json'
                }
            });
            console.log('‚úÖ R√©ponse:', response.status);
            console.log('üìä Donn√©es:', JSON.stringify(response.data, null, 2));
        } catch (error) {
            console.log('‚ùå Erreur:', error.response?.status, error.response?.data?.message || error.message);
        }

        // 4. Test d'autres endpoints
        console.log('\n4. Test d\'autres endpoints:');
        const endpoints = [
            '/api/collaborateurs',
            '/api/clients',
            '/api/opportunities'
        ];

        for (const endpoint of endpoints) {
            try {
                const response = await axios.get(`http://localhost:3000${endpoint}`);
                console.log(`‚úÖ ${endpoint}:`, response.status);
            } catch (error) {
                console.log(`‚ùå ${endpoint}:`, error.response?.status, error.response?.data?.message || error.message);
            }
        }

    } catch (error) {
        console.error('‚ùå Erreur g√©n√©rale:', error.message);
    }
}

debugUsersAPI(); 