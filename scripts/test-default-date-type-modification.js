const fs = require('fs');
const path = require('path');

// Script pour tester la date par d√©faut dans la section Modification Type de Collaborateur
function testDefaultDateTypeModification() {
  console.log('üîç Test de la date par d√©faut dans la section Modification Type de Collaborateur...\n');
  
  const collaborateursJsPath = path.join(__dirname, '../public/js/collaborateurs.js');
  
  try {
    const content = fs.readFileSync(collaborateursJsPath, 'utf8');
    
    console.log('üìã V√âRIFICATIONS DE LA DATE PAR D√âFAUT:');
    console.log('=======================================');
    
    // 1. V√©rifier que la date par d√©faut est d√©finie pour le type de collaborateur
    const typeDateDefault = content.includes('elements[\'rh-type-collaborateur-date-effet\'].value = new Date().toISOString().split(\'T\')[0]');
    console.log(`‚úÖ Date par d√©faut pour type collaborateur: ${typeDateDefault ? 'PR√âSENTE' : 'MANQUANTE'}`);
    
    // 2. V√©rifier que la date par d√©faut est d√©finie pour les grades (r√©f√©rence)
    const gradeDateDefault = content.includes('elements[\'rh-grade-date-effet\'].value = new Date().toISOString().split(\'T\')[0]');
    console.log(`‚úÖ Date par d√©faut pour grade (r√©f√©rence): ${gradeDateDefault ? 'PR√âSENTE' : 'MANQUANTE'}`);
    
    // 3. V√©rifier que la date par d√©faut est d√©finie pour les postes (r√©f√©rence)
    const posteDateDefault = content.includes('elements[\'rh-poste-date-effet\'].value = new Date().toISOString().split(\'T\')[0]');
    console.log(`‚úÖ Date par d√©faut pour poste (r√©f√©rence): ${posteDateDefault ? 'PR√âSENTE' : 'MANQUANTE'}`);
    
    // 4. V√©rifier que la date par d√©faut est d√©finie pour l'organisation (r√©f√©rence)
    const orgDateDefault = content.includes('elements[\'rh-organisation-date-effet\'].value = new Date().toISOString().split(\'T\')[0]');
    console.log(`‚úÖ Date par d√©faut pour organisation (r√©f√©rence): ${orgDateDefault ? 'PR√âSENTE' : 'MANQUANTE'}`);
    
    // 5. V√©rifier que le motif est r√©initialis√© pour le type de collaborateur
    const typeMotifReset = content.includes('elements[\'rh-type-collaborateur-motif\'].value = \'\'');
    console.log(`‚úÖ R√©initialisation du motif type collaborateur: ${typeMotifReset ? 'PR√âSENTE' : 'MANQUANTE'}`);
    
    // 6. V√©rifier la coh√©rence avec les autres sections
    const allSectionsHaveDefaultDate = typeDateDefault && gradeDateDefault && posteDateDefault && orgDateDefault;
    console.log(`‚úÖ Coh√©rence avec toutes les sections: ${allSectionsHaveDefaultDate ? 'PR√âSENTE' : 'MANQUANTE'}`);
    
    console.log('\nüìä R√âSUM√â DE LA DATE PAR D√âFAUT:');
    console.log('=================================');
    
    const totalChecks = 6;
    const passedChecks = [
      typeDateDefault,
      gradeDateDefault,
      posteDateDefault,
      orgDateDefault,
      typeMotifReset,
      allSectionsHaveDefaultDate
    ].filter(Boolean).length;
    
    console.log(`‚úÖ ${passedChecks}/${totalChecks} fonctionnalit√©s de date par d√©faut appliqu√©es`);
    
    if (typeDateDefault) {
      console.log('üéâ La date par d√©faut a √©t√© ajout√©e √† la section Modification Type de Collaborateur !');
      console.log('\nüöÄ COMPORTEMENT ATTENDU:');
      console.log('=========================');
      console.log('‚úÖ Lors de l\'ouverture du modal RH:');
      console.log('   ‚Ä¢ Section "√âvolution de Grade": Date du jour pr√©-remplie');
      console.log('   ‚Ä¢ Section "√âvolution de Poste": Date du jour pr√©-remplie');
      console.log('   ‚Ä¢ Section "Modification Type de Collaborateur": Date du jour pr√©-remplie ‚úÖ');
      console.log('   ‚Ä¢ Section "√âvolution Organisationnelle": Date du jour pr√©-remplie');
      console.log('');
      console.log('‚úÖ Toutes les sections ont maintenant la date du jour par d√©faut');
      console.log('‚úÖ Coh√©rence parfaite entre toutes les sections du modal RH');
      console.log('‚úÖ Meilleure exp√©rience utilisateur (pas besoin de saisir la date manuellement)');
    } else {
      console.log('‚ö†Ô∏è  La date par d√©faut n\'a pas √©t√© trouv√©e pour la section Modification Type de Collaborateur.');
    }
    
    console.log('\nüîç D√âTAILS TECHNIQUES:');
    console.log('======================');
    console.log('‚Ä¢ Utilisation de: new Date().toISOString().split(\'T\')[0]');
    console.log('‚Ä¢ Format de date: YYYY-MM-DD (compatible avec input type="date")');
    console.log('‚Ä¢ Application: Lors de l\'ouverture du modal RH');
    console.log('‚Ä¢ R√©initialisation: Lors de la fermeture du modal apr√®s succ√®s');
    console.log('‚Ä¢ Coh√©rence: M√™me logique que les autres sections');
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la lecture du fichier:', error.message);
  }
}

// Ex√©cuter le script
if (require.main === module) {
  testDefaultDateTypeModification();
}

module.exports = { testDefaultDateTypeModification };






