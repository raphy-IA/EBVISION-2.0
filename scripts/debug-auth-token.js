#!/usr/bin/env node

/**
 * Script pour d√©boguer les probl√®mes d'authentification
 * Usage: node scripts/debug-auth-token.js
 */

const fs = require('fs');
const path = require('path');

console.log('üîç D√âBOGAGE DES PROBL√àMES D\'AUTHENTIFICATION');
console.log('==============================================\n');

function debugAuth() {
    console.log('üìã V√âRIFICATIONS:');
    
    // 1. V√©rifier que le fichier .env existe
    const envPath = path.join(__dirname, '..', '.env');
    if (fs.existsSync(envPath)) {
        console.log('‚úÖ Fichier .env trouv√©');
        
        const envContent = fs.readFileSync(envPath, 'utf8');
        const hasJwtSecret = envContent.includes('JWT_SECRET=');
        if (hasJwtSecret) {
            console.log('‚úÖ JWT_SECRET configur√©');
        } else {
            console.log('‚ùå JWT_SECRET manquant dans .env');
        }
    } else {
        console.log('‚ùå Fichier .env non trouv√©');
    }
    
    // 2. V√©rifier la configuration de la base de donn√©es
    console.log('\nüîç Configuration de la base de donn√©es:');
    require('dotenv').config();
    
    const dbConfig = {
        user: process.env.DB_USER || 'postgres',
        host: process.env.DB_HOST || 'localhost',
        database: process.env.DB_NAME || 'eb_vision',
        password: process.env.DB_PASSWORD ? '***' : 'non d√©fini',
        port: process.env.DB_PORT || 5432,
    };
    
    console.log('üìä Configuration DB:', dbConfig);
    
    // 3. V√©rifier les variables d'environnement critiques
    console.log('\nüîç Variables d\'environnement critiques:');
    const criticalVars = ['JWT_SECRET', 'DB_USER', 'DB_NAME', 'DB_HOST'];
    criticalVars.forEach(varName => {
        const value = process.env[varName];
        if (value) {
            console.log(`‚úÖ ${varName}: ${varName === 'JWT_SECRET' ? '***' : value}`);
        } else {
            console.log(`‚ùå ${varName}: non d√©fini`);
        }
    });
    
    console.log('\nüí° RECOMMANDATIONS:');
    console.log('1. ‚úÖ V√©rifiez que l\'utilisateur est connect√© dans le navigateur');
    console.log('2. ‚úÖ V√©rifiez que le token JWT est valide');
    console.log('3. ‚úÖ V√©rifiez que la base de donn√©es est accessible');
    console.log('4. ‚úÖ V√©rifiez les logs du serveur pour plus de d√©tails');
    
    console.log('\nüîß SOLUTION PROBABLE:');
    console.log('Le probl√®me vient probablement de l\'authentification c√¥t√© client.');
    console.log('L\'utilisateur doit se reconnecter ou le token a expir√©.');
    console.log('V√©rifiez dans la console du navigateur si le token est pr√©sent.');
}

debugAuth();
