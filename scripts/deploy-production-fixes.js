// Script de d√©ploiement des corrections en production
const fs = require('fs');
const path = require('path');

console.log('üöÄ D√©ploiement des corrections en production...\n');

// Liste des fichiers √† d√©ployer avec leurs corrections
const filesToDeploy = [
    {
        source: 'src/services/userAccessService.js',
        description: 'Service de cr√©ation de comptes utilisateur corrig√©'
    },
    {
        source: 'src/middleware/auth.js', 
        description: 'Middleware de permissions corrig√©'
    },
    {
        source: 'public/collaborateurs.html',
        description: 'Interface avec s√©lecteur de r√¥les dynamique'
    },
    {
        source: 'public/js/photo-upload.js',
        description: 'Gestionnaire de photos avec aper√ßu dimensionn√©'
    }
];

// V√©rifier que tous les fichiers source existent
console.log('üìã V√©rification des fichiers source...');
let allFilesExist = true;

filesToDeploy.forEach(file => {
    if (fs.existsSync(file.source)) {
        console.log(`‚úÖ ${file.source} - ${file.description}`);
    } else {
        console.log(`‚ùå ${file.source} - FICHIER MANQUANT !`);
        allFilesExist = false;
    }
});

if (!allFilesExist) {
    console.log('\n‚ùå Certains fichiers source sont manquants. D√©ploiement annul√©.');
    process.exit(1);
}

console.log('\nüìù Instructions de d√©ploiement :');
console.log('=====================================');

console.log('\n1Ô∏è‚É£ **Sauvegarder les fichiers actuels en production :**');
console.log('   cd /path/to/ebvision2.0');
filesToDeploy.forEach(file => {
    const fileName = path.basename(file.source);
    const dir = path.dirname(file.source);
    console.log(`   cp ${file.source} ${file.source}.backup`);
});

console.log('\n2Ô∏è‚É£ **Copier les fichiers corrig√©s :**');
console.log('   # Depuis votre machine locale, utilisez scp ou rsync :');
filesToDeploy.forEach(file => {
    console.log(`   scp ${file.source} user@server:/path/to/ebvision2.0/${file.source}`);
});

console.log('\n3Ô∏è‚É£ **Red√©marrer l\'application :**');
console.log('   pm2 restart eb-vision-2.0');

console.log('\n4Ô∏è‚É£ **V√©rifier le statut :**');
console.log('   pm2 status');
console.log('   pm2 logs eb-vision-2.0 --lines 20');

console.log('\n5Ô∏è‚É£ **Tester les fonctionnalit√©s :**');
console.log('   - Cr√©ation de compte utilisateur (s√©lecteur de r√¥les dynamique)');
console.log('   - Permissions (plus d\'erreur 403)');
console.log('   - Aper√ßu des photos (dimensions contr√¥l√©es)');

console.log('\n‚úÖ **D√©ploiement termin√© !**');
console.log('\nüí° **Note importante :**');
console.log('   - Assurez-vous que les permissions des fichiers sont correctes');
console.log('   - V√©rifiez que l\'application red√©marre sans erreur');
console.log('   - Testez en production avant de valider');










