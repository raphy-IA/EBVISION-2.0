Write-Host "üîß Correction simple des erreurs JavaScript..." -ForegroundColor Green

# Lire le fichier
$collaborateursFile = "public/collaborateurs.html"
$content = Get-Content $collaborateursFile -Raw

Write-Host "üìã Fichier lu, taille: $($content.Length) caract√®res" -ForegroundColor Yellow

# 1. V√©rifier si la fonction showNewCollaborateurModal existe
if ($content -match "function showNewCollaborateurModal\(\)") {
    Write-Host "‚úÖ Fonction showNewCollaborateurModal trouv√©e" -ForegroundColor Green
} else {
    Write-Host "‚ùå Fonction showNewCollaborateurModal MANQUANTE" -ForegroundColor Red
    Write-Host "üîß Ajout de la fonction..." -ForegroundColor Yellow
    
    $functionToAdd = @"

        function showNewCollaborateurModal() {
            console.log('Ouverture du modal nouveau collaborateur...');
            const modal = new bootstrap.Modal(document.getElementById('newCollaborateurModal'));
            modal.show();
        }
"@
    
    # Ajouter √† la fin du script
    $content = $content -replace '</script>', "$functionToAdd`n    </script>"
    Write-Host "‚úÖ Fonction ajout√©e" -ForegroundColor Green
}

# 2. Corriger les erreurs de syntaxe showAlert
Write-Host "üîç Recherche d'erreurs de syntaxe..." -ForegroundColor Yellow

$lines = $content -split "`n"
$hasError = $false

for ($i = 0; $i -lt $lines.Count; $i++) {
    $line = $lines[$i]
    if ($line -match "showAlert\(" -and $line -notmatch "showAlert\([^)]*\)") {
        Write-Host "‚ùå Erreur de syntaxe trouv√©e √† la ligne $($i + 1): $line" -ForegroundColor Red
        $hasError = $true
    }
}

if ($hasError) {
    Write-Host "üîß Correction des erreurs de syntaxe..." -ForegroundColor Yellow
    $content = $content -replace "showAlert\([^)]*$", 'showAlert("Erreur: √©l√©ments d\'interface manquants", "danger")'
    Write-Host "‚úÖ Erreurs de syntaxe corrig√©es" -ForegroundColor Green
} else {
    Write-Host "‚úÖ Aucune erreur de syntaxe d√©tect√©e" -ForegroundColor Green
}

# 3. Ajouter des logs de debug simples
Write-Host "üîß Ajout de logs de debug..." -ForegroundColor Yellow

$debugFunction = @"

        // Debug simple
        console.log('DEBUG: Page collaborateurs.html charg√©e');
        
        // Debug au chargement de la page
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DEBUG: DOM charg√©');
            console.log('DEBUG: √âl√©ments trouv√©s:');
            console.log('- newCollaborateurModal:', !!document.getElementById('newCollaborateurModal'));
            console.log('- collaborateurs-table:', !!document.getElementById('collaborateurs-table'));
        });
"@

# Ajouter le debug
$content = $content -replace '</script>', "$debugFunction`n    </script>"

# Sauvegarder le fichier
$content | Set-Content $collaborateursFile -Encoding UTF8

Write-Host "‚úÖ Fichier corrig√© et sauvegard√©" -ForegroundColor Green

Write-Host ""
Write-Host "‚úÖ Correction termin√©e !" -ForegroundColor Green
Write-Host ""
Write-Host "üß™ Instructions de test :" -ForegroundColor Cyan
Write-Host "1. D√©marrer le serveur: npm start" -ForegroundColor White
Write-Host "2. Aller sur: http://localhost:3000/collaborateurs.html" -ForegroundColor White
Write-Host "3. Ouvrir la console du navigateur (F12)" -ForegroundColor White
Write-Host "4. Vous devriez voir des logs de debug" -ForegroundColor White
Write-Host "5. Tester le bouton 'Nouveau collaborateur'" -ForegroundColor White