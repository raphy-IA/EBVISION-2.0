const { pool } = require('../src/utils/database');

async function addGranularMenuPermissions() {
    let client;
    try {
        console.log('üîÑ Ajout des permissions granulaires de menu...');
        client = await pool.connect();

        // Permissions granulaires pour chaque lien de menu
        const granularPermissions = [
            // Dashboard
            { code: 'menu.dashboard.main', name: 'Voir le Dashboard principal', description: 'Acc√®s au tableau de bord principal', category: 'menu' },
            { code: 'menu.dashboard.personal', name: 'Voir le Dashboard Personnel', description: 'Acc√®s au dashboard personnel', category: 'menu' },
            { code: 'menu.dashboard.team', name: 'Voir le Dashboard √âquipe', description: 'Acc√®s au dashboard √©quipe', category: 'menu' },
            { code: 'menu.dashboard.direction', name: 'Voir le Dashboard Direction', description: 'Acc√®s au dashboard direction', category: 'menu' },
            { code: 'menu.dashboard.recovery', name: 'Voir le Dashboard Recouvrement', description: 'Acc√®s au dashboard recouvrement', category: 'menu' },
            { code: 'menu.dashboard.profitability', name: 'Voir le Dashboard Rentabilit√©', description: 'Acc√®s au dashboard rentabilit√©', category: 'menu' },
            { code: 'menu.dashboard.chargeability', name: 'Voir le Dashboard Chargeabilit√©', description: 'Acc√®s au dashboard chargeabilit√©', category: 'menu' },
            { code: 'menu.dashboard.analytics', name: 'Voir Analytics & Indicateurs', description: 'Acc√®s aux analytics et indicateurs', category: 'menu' },
            { code: 'menu.dashboard.optimized', name: 'Voir le Dashboard Optimis√©', description: 'Acc√®s au dashboard optimis√©', category: 'menu' },

            // Rapports
            { code: 'menu.reports.general', name: 'Voir les Rapports g√©n√©raux', description: 'Acc√®s aux rapports g√©n√©raux', category: 'menu' },
            { code: 'menu.reports.missions', name: 'Voir les Rapports missions', description: 'Acc√®s aux rapports missions', category: 'menu' },
            { code: 'menu.reports.opportunities', name: 'Voir les Rapports opportunit√©s', description: 'Acc√®s aux rapports opportunit√©s', category: 'menu' },
            { code: 'menu.reports.hr', name: 'Voir les Rapports RH', description: 'Acc√®s aux rapports RH', category: 'menu' },
            { code: 'menu.reports.prospecting', name: 'Voir les Rapports de prospection', description: 'Acc√®s aux rapports de prospection', category: 'menu' },

            // Gestion des Temps
            { code: 'menu.time_entries.input', name: 'Voir la Saisie des temps', description: 'Acc√®s √† la saisie des temps', category: 'menu' },
            { code: 'menu.time_entries.approval', name: 'Voir la Validation des temps', description: 'Acc√®s √† la validation des temps', category: 'menu' },

            // Gestion Mission
            { code: 'menu.missions.list', name: 'Voir les Missions', description: 'Acc√®s √† la liste des missions', category: 'menu' },
            { code: 'menu.missions.types', name: 'Voir les Types de mission', description: 'Acc√®s aux types de mission', category: 'menu' },
            { code: 'menu.missions.tasks', name: 'Voir les T√¢ches', description: 'Acc√®s aux t√¢ches', category: 'menu' },
            { code: 'menu.missions.invoices', name: 'Voir les Factures et paiements', description: 'Acc√®s aux factures et paiements', category: 'menu' },

            // Market Pipeline
            { code: 'menu.opportunities.clients', name: 'Voir les Clients et prospects', description: 'Acc√®s aux clients et prospects', category: 'menu' },
            { code: 'menu.opportunities.list', name: 'Voir les Opportunit√©s', description: 'Acc√®s √† la liste des opportunit√©s', category: 'menu' },
            { code: 'menu.opportunities.types', name: 'Voir les Types d\'opportunit√©', description: 'Acc√®s aux types d\'opportunit√©', category: 'menu' },
            { code: 'menu.opportunities.campaigns', name: 'Voir les Campagnes de prospection', description: 'Acc√®s aux campagnes de prospection', category: 'menu' },
            { code: 'menu.opportunities.validations', name: 'Voir la Validation des campagnes', description: 'Acc√®s √† la validation des campagnes', category: 'menu' },

            // Gestion RH
            { code: 'menu.collaborateurs.list', name: 'Voir les Collaborateurs', description: 'Acc√®s √† la liste des collaborateurs', category: 'menu' },
            { code: 'menu.collaborateurs.grades', name: 'Voir les Grades', description: 'Acc√®s aux grades', category: 'menu' },
            { code: 'menu.collaborateurs.positions', name: 'Voir les Postes', description: 'Acc√®s aux postes', category: 'menu' },

            // Configurations
            { code: 'menu.settings.fiscal_years', name: 'Voir les Ann√©es fiscales', description: 'Acc√®s aux ann√©es fiscales', category: 'menu' },
            { code: 'menu.settings.countries', name: 'Voir les Pays', description: 'Acc√®s aux pays', category: 'menu' },

            // Business Unit
            { code: 'menu.business_units.list', name: 'Voir les Unit√©s d\'affaires', description: 'Acc√®s aux unit√©s d\'affaires', category: 'menu' },
            { code: 'menu.business_units.divisions', name: 'Voir les Divisions', description: 'Acc√®s aux divisions', category: 'menu' },
            { code: 'menu.business_units.managers', name: 'Voir les Responsables BU/Division', description: 'Acc√®s aux responsables BU/Division', category: 'menu' },
            { code: 'menu.business_units.internal_activities', name: 'Voir les Activit√©s internes', description: 'Acc√®s aux activit√©s internes', category: 'menu' },
            { code: 'menu.business_units.sectors', name: 'Voir les Secteurs d\'activit√©', description: 'Acc√®s aux secteurs d\'activit√©', category: 'menu' },
            { code: 'menu.business_units.opportunity_config', name: 'Voir la Configuration types d\'opportunit√©', description: 'Acc√®s √† la configuration des types d\'opportunit√©', category: 'menu' },
            { code: 'menu.business_units.sources', name: 'Voir les Sources & Entreprises', description: 'Acc√®s aux sources et entreprises', category: 'menu' },
            { code: 'menu.business_units.templates', name: 'Voir les Mod√®les de prospection', description: 'Acc√®s aux mod√®les de prospection', category: 'menu' },
            { code: 'menu.business_units.campaigns', name: 'Voir les Campagnes de prospection (BU)', description: 'Acc√®s aux campagnes de prospection', category: 'menu' },
            { code: 'menu.business_units.campaign_validations', name: 'Voir les Validations de campagnes', description: 'Acc√®s aux validations de campagnes', category: 'menu' },

            // Param√®tres Administration
            { code: 'menu.users.notifications', name: 'Voir la Configuration notifications', description: 'Acc√®s √† la configuration des notifications', category: 'menu' },
            { code: 'menu.users.list', name: 'Voir les Utilisateurs', description: 'Acc√®s √† la liste des utilisateurs', category: 'menu' },
            { code: 'menu.users.permissions', name: 'Voir l\'Administration des Permissions', description: 'Acc√®s √† l\'administration des permissions', category: 'menu' }
        ];

        // Ajouter chaque permission
        for (const permission of granularPermissions) {
            console.log(`üìù Ajout de la permission: ${permission.code}`);
            
            const result = await client.query(`
                INSERT INTO permissions (code, name, description, category)
                VALUES ($1, $2, $3, $4)
                ON CONFLICT (code) DO NOTHING
                RETURNING id
            `, [permission.code, permission.name, permission.description, permission.category]);

            if (result.rows.length > 0) {
                console.log(`‚úÖ Permission ajout√©e: ${permission.code} (ID: ${result.rows[0].id})`);
            } else {
                console.log(`‚ö†Ô∏è Permission d√©j√† existante: ${permission.code}`);
            }
        }

        // Attribuer les permissions granulaires aux r√¥les par d√©faut
        console.log('üîó Attribution des permissions granulaires aux r√¥les...');
        
        const rolePermissions = {
            'SUPER_ADMIN': granularPermissions.map(p => p.code), // Toutes les permissions
            'ADMIN': [
                // Dashboard - tout
                'menu.dashboard.main', 'menu.dashboard.personal', 'menu.dashboard.team', 'menu.dashboard.direction',
                'menu.dashboard.recovery', 'menu.dashboard.profitability', 'menu.dashboard.chargeability',
                'menu.dashboard.analytics', 'menu.dashboard.optimized',
                // Rapports - tout
                'menu.reports.general', 'menu.reports.missions', 'menu.reports.opportunities', 'menu.reports.hr', 'menu.reports.prospecting',
                // Temps - tout
                'menu.time_entries.input', 'menu.time_entries.approval',
                // Missions - tout
                'menu.missions.list', 'menu.missions.types', 'menu.missions.tasks', 'menu.missions.invoices',
                // Opportunit√©s - tout
                'menu.opportunities.clients', 'menu.opportunities.list', 'menu.opportunities.types',
                'menu.opportunities.campaigns', 'menu.opportunities.validations',
                // Collaborateurs - tout
                'menu.collaborateurs.list', 'menu.collaborateurs.grades', 'menu.collaborateurs.positions',
                // Configurations - tout
                'menu.settings.fiscal_years', 'menu.settings.countries',
                // Business Unit - tout
                'menu.business_units.list', 'menu.business_units.divisions', 'menu.business_units.managers',
                'menu.business_units.internal_activities', 'menu.business_units.sectors',
                'menu.business_units.opportunity_config', 'menu.business_units.sources',
                'menu.business_units.templates', 'menu.business_units.campaigns', 'menu.business_units.campaign_validations',
                // Administration - tout
                'menu.users.notifications', 'menu.users.list', 'menu.users.permissions'
            ],
            'MANAGER': [
                // Dashboard - limit√©
                'menu.dashboard.main', 'menu.dashboard.personal', 'menu.dashboard.team',
                // Rapports - tout
                'menu.reports.general', 'menu.reports.missions', 'menu.reports.opportunities', 'menu.reports.hr', 'menu.reports.prospecting',
                // Temps - tout
                'menu.time_entries.input', 'menu.time_entries.approval',
                // Missions - tout
                'menu.missions.list', 'menu.missions.types', 'menu.missions.tasks', 'menu.missions.invoices',
                // Opportunit√©s - tout
                'menu.opportunities.clients', 'menu.opportunities.list', 'menu.opportunities.types',
                'menu.opportunities.campaigns', 'menu.opportunities.validations',
                // Collaborateurs - limit√©
                'menu.collaborateurs.list'
            ],
            'CONSULTANT': [
                // Dashboard - limit√©
                'menu.dashboard.main', 'menu.dashboard.personal',
                // Temps - tout
                'menu.time_entries.input', 'menu.time_entries.approval',
                // Missions - limit√©
                'menu.missions.list', 'menu.missions.tasks',
                // Opportunit√©s - limit√©
                'menu.opportunities.clients', 'menu.opportunities.list'
            ],
            'COLLABORATEUR': [
                // Dashboard - limit√©
                'menu.dashboard.main', 'menu.dashboard.personal',
                // Temps - limit√©
                'menu.time_entries.input',
                // Missions - limit√©
                'menu.missions.list', 'menu.missions.tasks'
            ]
        };

        for (const [roleName, permissions] of Object.entries(rolePermissions)) {
            console.log(`üîó Attribution des permissions au r√¥le: ${roleName}`);
            
            // R√©cup√©rer l'ID du r√¥le
            const roleResult = await client.query('SELECT id FROM roles WHERE name = $1', [roleName]);
            if (roleResult.rows.length === 0) {
                console.log(`‚ö†Ô∏è R√¥le non trouv√©: ${roleName}`);
                continue;
            }
            
            const roleId = roleResult.rows[0].id;
            
            // Attribuer chaque permission
            for (const permissionCode of permissions) {
                const permResult = await client.query('SELECT id FROM permissions WHERE code = $1', [permissionCode]);
                if (permResult.rows.length === 0) {
                    console.log(`‚ö†Ô∏è Permission non trouv√©e: ${permissionCode}`);
                    continue;
                }
                
                const permissionId = permResult.rows[0].id;
                
                await client.query(`
                    INSERT INTO role_permissions (role_id, permission_id)
                    VALUES ($1, $2)
                    ON CONFLICT (role_id, permission_id) DO NOTHING
                `, [roleId, permissionId]);
                
                console.log(`‚úÖ Permission ${permissionCode} attribu√©e au r√¥le ${roleName}`);
            }
        }

        console.log('‚úÖ Permissions granulaires de menu ajout√©es avec succ√®s !');
        
    } catch (error) {
        console.error('‚ùå Erreur lors de l\'ajout des permissions granulaires:', error);
    } finally {
        if (client) {
            client.release();
        }
        process.exit(0);
    }
}

// Ex√©cuter le script
addGranularMenuPermissions();
