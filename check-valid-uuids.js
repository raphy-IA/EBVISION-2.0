const { pool } = require('./src/utils/database');

async function checkValidUUIDs() {
    try {
        console.log('üîç V√©rification des UUIDs valides dans les tables de r√©f√©rence...\n');
        
        // 1. Types de collaborateurs
        console.log('1Ô∏è‚É£ Types de collaborateurs:');
        const typesCollab = await pool.query(`
            SELECT id, nom, code
            FROM types_collaborateurs 
            LIMIT 5
        `);
        
        console.log(`üìä ${typesCollab.rows.length} types trouv√©s`);
        typesCollab.rows.forEach((type, index) => {
            console.log(`  ${index + 1}. ${type.nom} (${type.code}) - ID: ${type.id}`);
        });
        
        // 2. Postes
        console.log('\n2Ô∏è‚É£ Postes:');
        const postes = await pool.query(`
            SELECT id, nom, code
            FROM postes 
            LIMIT 5
        `);
        
        console.log(`üìä ${postes.rows.length} postes trouv√©s`);
        postes.rows.forEach((poste, index) => {
            console.log(`  ${index + 1}. ${poste.nom} (${poste.code}) - ID: ${poste.id}`);
        });
        
        // 3. Grades
        console.log('\n3Ô∏è‚É£ Grades:');
        const grades = await pool.query(`
            SELECT id, nom, code
            FROM grades 
            LIMIT 5
        `);
        
        console.log(`üìä ${grades.rows.length} grades trouv√©s`);
        grades.rows.forEach((grade, index) => {
            console.log(`  ${index + 1}. ${grade.nom} (${grade.code}) - ID: ${grade.id}`);
        });
        
        // 4. Business Units
        console.log('\n4Ô∏è‚É£ Business Units:');
        const businessUnits = await pool.query(`
            SELECT id, nom, code
            FROM business_units 
            LIMIT 5
        `);
        
        console.log(`üìä ${businessUnits.rows.length} business units trouv√©s`);
        businessUnits.rows.forEach((bu, index) => {
            console.log(`  ${index + 1}. ${bu.nom} (${bu.code}) - ID: ${bu.id}`);
        });
        
        // 5. Divisions
        console.log('\n5Ô∏è‚É£ Divisions:');
        const divisions = await pool.query(`
            SELECT id, nom, code
            FROM divisions 
            LIMIT 5
        `);
        
        console.log(`üìä ${divisions.rows.length} divisions trouv√©es`);
        divisions.rows.forEach((division, index) => {
            console.log(`  ${index + 1}. ${division.nom} (${division.code}) - ID: ${division.id}`);
        });
        
        await pool.end();
        
        console.log('\n‚úÖ V√©rification termin√©e !');
        
    } catch (error) {
        console.error('‚ùå Erreur:', error);
    }
}

checkValidUUIDs(); 